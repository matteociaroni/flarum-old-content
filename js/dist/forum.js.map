{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,2B,aCWxDC,IAAAA,aAAAA,IAAqB,oCAAoC,SAASA,GACjEC,IAAAA,UAAAA,MAAuBC,IAAAA,UAAgB,SACvCC,IAAAA,UAAAA,MAA6BD,IAAAA,UAAgB,UAG7CE,EAAAA,EAAAA,UAASC,IAAAA,UAAoB,QAAQ,WACpC,IAAMC,EAAOC,KAAKC,MAAMF,KAClBG,EAAOH,EAAKI,YACZC,EAAYJ,KAAKK,aAAaN,GAC9BO,EAAQ,iBAAkBC,SAASC,gBAUnCC,EAAYT,KAAKC,MAAMF,KAAKW,QAAU,0BAA4B,kBAExE,OACCC,EAAA,OAAKF,UAAU,qBACdE,EAAA,KAAGF,UAAWA,EAAWG,QAVH,SAAUC,GAAG,IAAAC,EAAA,KACpCC,YAAW,kBAAMC,EAAEF,GAAMG,SAASC,KAAK,uBAAuBC,QAAQ,IAEtEN,EAAEO,QAAS,CACZ,EAMqD,cAAY,YAC7DC,IAAUnB,IAGZS,EAAA,OAAKF,UAAU,+BACdE,EAAA,QAAMF,UAAU,mBAAmBhB,EAAI6B,WAAWC,MAAM,iCAAkC,CAAEC,OAAQzB,EAAKyB,YAAoB,IAC7Hb,EAAA,QAAMF,UAAU,iBAAiBgB,IAASvB,IAAa,IAACS,EAAA,QAAMF,UAAU,eAAeV,EAAK2B,KAAKC,WAAWC,WAC3GtB,EACAK,EAAA,KAAGF,UAAU,4BAA4BoB,KAAMzB,GAC7CA,GAGFO,EAAA,SAAOF,UAAU,iCAAiCpB,MAAOe,EAAWQ,QAAS,SAACC,GAAC,OAAKA,EAAEiB,iBAAiB,KAK5G,KAEAC,EAAAA,EAAAA,QAAOnC,IAAAA,UAAsB,UAAU,SAAUoC,GAC5ChC,KAAKU,SACRsB,EAAOC,IAAI,MACVC,IAAAA,UAAgB,CACfC,KAAM,MACNC,MAAO3C,EAAI6B,WAAWC,MAAM,0CAA2C,CAACc,YAAa,eACrFC,KAAM,uBAIV,GACD,G","sources":["webpack://@matteociaroni/flarum-old-content/webpack/bootstrap","webpack://@matteociaroni/flarum-old-content/webpack/runtime/compat get default export","webpack://@matteociaroni/flarum-old-content/webpack/runtime/define property getters","webpack://@matteociaroni/flarum-old-content/webpack/runtime/hasOwnProperty shorthand","webpack://@matteociaroni/flarum-old-content/webpack/runtime/make namespace object","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['forum/app']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['common/models/Post']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['common/Model']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['forum/components/PostMeta']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['common/extend']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['common/models/Discussion']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['common/components/Badge']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@matteociaroni/flarum-old-content/external root \"flarum.core.compat['common/helpers/fullTime']\"","webpack://@matteociaroni/flarum-old-content/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostMeta'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Discussion'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Badge'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/humanTime'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/helpers/fullTime'];","import app from 'flarum/forum/app';\nimport Post from 'flarum/common/models/Post';\nimport Model from 'flarum/common/Model';\nimport PostMeta from 'flarum/forum/components/PostMeta';\nimport {extend, override} from 'flarum/common/extend';\nimport Tooltip from 'flarum/common/components/Tooltip'\nimport Discussion from 'flarum/common/models/Discussion';\nimport Badge from 'flarum/common/components/Badge';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport fullTime from 'flarum/common/helpers/fullTime';\n\napp.initializers.add('matteociaroni/flarum-old-content', function(app) {\n\tPost.prototype.isOld = Model.attribute(\"isOld\");\n\tDiscussion.prototype.isOld = Model.attribute(\"isOld\");\n\t//\n\n\toverride(PostMeta.prototype, \"view\", function() {\n\t\tconst post = this.attrs.post;\n\t\tconst time = post.createdAt();\n\t\tconst permalink = this.getPermalink(post);\n\t\tconst touch = 'ontouchstart' in document.documentElement;\n\n\t\t// When the dropdown menu is shown, select the contents of the permalink\n\t\t// input so that the user can quickly copy the URL.\n\t\tconst selectPermalink = function (e) {\n\t\t\tsetTimeout(() => $(this).parent().find('.PostMeta-permalink').select());\n\n\t\t\te.redraw = false;\n\t\t};\n\n\t\tconst className = this.attrs.post.isOld() ? \"Dropdown-toggle oldDate\" : \"Dropdown-toggle\";\n\n\t\treturn (\n\t\t\t<div className=\"Dropdown PostMeta\">\n\t\t\t\t<a className={className} onclick={selectPermalink} data-toggle=\"dropdown\">\n\t\t\t\t\t{humanTime(time)}\n\t\t\t\t</a>\n\n\t\t\t\t<div className=\"Dropdown-menu dropdown-menu\">\n\t\t\t\t\t<span className=\"PostMeta-number\">{app.translator.trans('core.forum.post.number_tooltip', { number: post.number() })}</span>{' '}\n\t\t\t\t\t<span className=\"PostMeta-time\">{fullTime(time)}</span> <span className=\"PostMeta-ip\">{post.data.attributes.ipAddress}</span>\n\t\t\t\t\t{touch ? (\n\t\t\t\t\t\t<a className=\"Button PostMeta-permalink\" href={permalink}>\n\t\t\t\t\t\t\t{permalink}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<input className=\"FormControl PostMeta-permalink\" value={permalink} onclick={(e) => e.stopPropagation()} />\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t});\n\n\textend(Discussion.prototype, \"badges\", function (badges) {\n\t\tif (this.isOld()) {\n\t\t\tbadges.add(\"old\",\n\t\t\t\tBadge.component({\n\t\t\t\t\ttype: \"old\",\n\t\t\t\t\tlabel: app.translator.trans(\"matteociaroni-old-content.forum.tooltip\", {contentType: \"discussion\"}),\n\t\t\t\t\ticon: \"fas fa-exclamation\",\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\t});\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","app","Post","Model","Discussion","override","PostMeta","post","this","attrs","time","createdAt","permalink","getPermalink","touch","document","documentElement","className","isOld","m","onclick","e","_this","setTimeout","$","parent","find","select","redraw","humanTime","translator","trans","number","fullTime","data","attributes","ipAddress","href","stopPropagation","extend","badges","add","Badge","type","label","contentType","icon"],"sourceRoot":""}